trigger:
  branches:
    include:
      - master
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'
    - task: YarnInstaller@3
      displayName: 'Install Yarn'
      inputs:
        versionSpec: '1.x'
    - task: Yarn@2
      displayName: 'Install Dependencies'
      inputs:
        ProjectDirectory: '$(System.DefaultWorkingDirectory)'
        Arguments: 'install --frozen-lockfile'
    - task: Yarn@2
      displayName: 'Build App'
      inputs:
        ProjectDirectory: '$(System.DefaultWorkingDirectory)'
        Arguments: 'build-prod'
    - task: CopyFiles@2
      displayName: 'Copy Files'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/build'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true
    - task: PublishBuildArtifacts@1      
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'app'

- stage: Deploy
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'vs2017-win2016'
    variables:
      storageaccountname: staticwebsitedemostorage
    environment: 'Deploy Application'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: app
          - task: AzureFileCopy@3
            displayName: Deploy to Blob Storage
            inputs:
              sourcePath: $(Pipeline.Workspace)/app
              azureSubscription: 'Azure Resource Management (PZ)'
              destination: azureBlob
              storage: $(storageAccount)
              containerName: "$web"